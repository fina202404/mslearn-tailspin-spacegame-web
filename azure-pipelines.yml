trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '75ac27fb-79e0-42f0-9302-5a5755202de6'

  # Web app name
  webAppName: 'pythonapp619'  # Updated to your web app name

  # Environment name
  environmentName: 'pythonapp619'  # Same as web app name

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Specify the Python version to use
  pythonVersion: '3.11'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      name: 'Default'  # Use your agent pool name here, replace with actual pool name if different
      demands:
        - agent.name -equals 'AnukaHPlaptopLinux'  # Correct agent name as per your provided info
    steps:
    - script: |
        echo "Setting up Python $(pythonVersion)"
        sudo apt update
        sudo apt install -y python3.11 python3.11-venv python3.11-dev zip
        python3.11 --version
      displayName: 'Ensure Python 3.11 is Installed and zip is available'

    - script: |
        echo "Creating a virtual environment"
        python3.11 -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        # Install the dependencies from requirements.txt if it exists
        if [ -f "$(Build.SourcesDirectory)/requirements.txt" ]; then
          echo "Installing dependencies from requirements.txt"
          pip install -r $(Build.SourcesDirectory)/requirements.txt
        else
          echo "No requirements.txt found, skipping pip install."
        fi
      workingDirectory: $(projectRoot)
      displayName: 'Install Requirements'

    - task: ArchiveFiles@2
      displayName: 'Archive Files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload Package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      name: 'Default'  # Use your agent pool name here, replace with actual pool name if different
      demands:
        - agent.name -equals 'AnukaHPlaptopLinux'  # Correct agent name as per your provided info
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo "Verifying Python installation"
              python3.11 --version
            displayName: 'Verify Python Version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : 'spacegame001'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)  # Correct web app name
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip